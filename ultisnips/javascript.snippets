snippet req "require"
const $1 = require('$2') $0
endsnippet

snippet reqc "require curly"
const { $1 } = require('$2')$0
endsnippet

snippet imp "import"
import $1 from '$2'$0
endsnippet

snippet impc "import curly"
import { $1 } from '$2'$0
endsnippet

snippet arrow "arrow function"
($1) => { $2 }$0
endsnippet

snippet arrowc "collapse arrow"
(($1) => { $2 })$0
endsnippet

snippet cl "console log"
console.log($1)$0
endsnippet

snippet then "then function"
.then(($1) => { $2 })$0
endsnippet

snippet catch "catch function"
.catch(($1) => { $2 })$0
endsnippet

snippet filter "filter"
.filter((value, index, array) => { $2 })$0
endsnippet

snippet map "map"
.map((value, index, array) => { $2 })$0
endsnippet

snippet reduce "reduce"
.reduce((acc, value, index, array) => { $2 })$0
endsnippet

snippet promise "promise"
new Promise((resolve, reject) => { $1 })$0
endsnippet

snippet des "describe"
describe('$1', () => {$0})
endsnippet

snippet test "test"
test('$1', () => {$0})
endsnippet

snippet bef "before"
before(() => {$1})$0
endsnippet

snippet befall "before all"
beforeAll(() => {$1})$0
endsnippet

snippet af "after"
after(() => {$1})$0
endsnippet

snippet afall "after all"
afterAll(() => {$1})$0
endsnippet

snippet exp "expect"
expect($1).$0
endsnippet

snippet class "class"
class $1 
{
	constructor($2)
	{	
		$3
	}	
	$0
}
endsnippet

snippet modex "module export"
module.exports = $1
endsnippet

snippet exdef "export default"
export default $0
endsnippet

snippet exp	"export"
export { $0 }
endsnippet
